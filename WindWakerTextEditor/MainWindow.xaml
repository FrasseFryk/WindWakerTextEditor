<Window x:Class="WindWakerTextEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:WindWakerTextEditor"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="{Binding WindowTitle}" Height="623.1" Width="874" Background="#FFEEEEEE">
    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:NullToFalseConverter x:Key="NullToFalseConverter"/>
    </Window.Resources>
    <Grid>
        <DockPanel VerticalAlignment="Top" Height="20">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_Open" Command="{Binding OnRequestOpenFile}"/>
                    <MenuItem Header="_Save" Command="{Binding OnRequestSaveFile}"/>
                    <MenuItem Header="Save _As..." Command="{Binding OnRequestSaveFileAs}"/>
                    <Separator/>
                    <MenuItem Header="Close" Command="ApplicationCommands.Close"/>
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="Add Message" Command="{Binding OnRequestAddMessage}"/>
                    <MenuItem Header="Delete Selected Message" Command="{Binding OnRequestRemoveMessage}"/>
                </MenuItem>
                <MenuItem Header="Options">
                    <MenuItem Header="Compress on Save" IsCheckable="True" IsChecked="{Binding IsCompressed}"/>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="_About" Command="{Binding OnRequestAboutInfo}"/>
                    <MenuItem Header="_Wiki" Command="{Binding OnRequestOpenWebPage}" CommandParameter="https://github.com/Sage-of-Mirrors/WPFTextEditor/wiki"/>
                    <MenuItem Header="_Report a Bug" Command="{Binding OnRequestOpenWebPage}" CommandParameter="https://github.com/Sage-of-Mirrors/WPFTextEditor/issues"/>
                </MenuItem>
            </Menu>
        </DockPanel>
        <DockPanel LastChildFill="true" Margin="0,20,498,34">
            <Grid>
                <xctk:WatermarkTextBox x:Name="SearchTextBox" Watermark="Type to search..." Margin="10,10,10,0" TextWrapping="Wrap" Text="{Binding SearchFilter, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsDataLoaded}" Height="24" VerticalAlignment="Top"/>
                <ListView x:Name="TextListView" Grid.Column="0" Margin="10,39,10,10" ItemsSource="{Binding ColViewSource.View, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedMessage, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" UseLayoutRounding="True" ScrollViewer.CanContentScroll="True">
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add message" Command="{Binding OnRequestAddMessage}"/>
                            <MenuItem Header="Delete message" Command="{Binding OnRequestRemoveMessage}"/>
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.View>
                        <GridView AllowsColumnReorder="False">
                            <GridViewColumn Header="Index" Width="45" DisplayMemberBinding="{Binding Index}"/>
                            <GridViewColumn Header="Msg. ID" Width="45" DisplayMemberBinding="{Binding MessageId}"/>
                            <GridViewColumn Header="Text Data" DisplayMemberBinding="{Binding TextData, UpdateSourceTrigger=PropertyChanged}" Width="Auto"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </DockPanel>
        <DockPanel LastChildFill="True" Margin="0,395,10,10" HorizontalAlignment="Right" Width="488">
            <Grid>
                <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding SelectedMessage.TextData, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="TextBox_SelectionChanged" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" Margin="2,0,0,0" BorderThickness="2">
                    <TextBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="ApplicationCommands.Cut"/>
                            <MenuItem Command="ApplicationCommands.Copy"/>
                            <MenuItem Command="ApplicationCommands.Paste"/>
                            <MenuItem Header="Control codes...">
                                <MenuItem Header="Player Name" Command="{Binding InsertCommand}" CommandParameter="player"/>
                                <MenuItem Header="Color" Command="{Binding InsertCommand}" CommandParameter="color:0"/>
                                <MenuItem Header="Scale" Command="{Binding InsertCommand}" CommandParameter="scale:100"/>
                                <Separator/>
                                <MenuItem Header="Draw by Character" Command="{Binding InsertCommand}" CommandParameter="draw:char"/>
                                <MenuItem Header="Draw Instantly" Command="{Binding InsertCommand}" CommandParameter="draw:instant"/>
                                <Separator/>
                                <MenuItem Header="Wait" Command="{Binding InsertCommand}" CommandParameter="wait:10"/>
                                <MenuItem Header="Wait and Dismiss" Command="{Binding InsertCommand}" CommandParameter="wait+dismiss:10"/>
                                <MenuItem Header="Wait and Dismiss with Prompt" Command="{Binding InsertCommand}" CommandParameter="wait+dismiss (prompt):10"/>
                            </MenuItem>
                            <MenuItem Header="Icons...">
                                <MenuItem Header="A Button" Command="{Binding InsertCommand}" CommandParameter="icon:A button"/>
                                <MenuItem Header="Flashing A Button" Command="{Binding InsertCommand}" CommandParameter="icon:starburst A button"/>
                                <MenuItem Header="B Button" Command="{Binding InsertCommand}" CommandParameter="icon:B button"/>
                                <MenuItem Header="X Button" Command="{Binding InsertCommand}" CommandParameter="icon:X button"/>
                                <MenuItem Header="Y Button" Command="{Binding InsertCommand}" CommandParameter="icon:Y button"/>
                                <MenuItem Header="Z Button" Command="{Binding InsertCommand}" CommandParameter="icon:Z button"/>
                                <MenuItem Header="Left Trigger" Command="{Binding InsertCommand}" CommandParameter="icon:L trigger"/>
                                <MenuItem Header="Right Trigger" Command="{Binding InsertCommand}" CommandParameter="icon:R trigger"/>
                                <MenuItem Header="C Stick" Command="{Binding InsertCommand}" CommandParameter="icon:C stick"/>
                                <Separator/>
                                <MenuItem Header="Control stick...">
                                    <MenuItem Header="All Directions" Command="{Binding InsertCommand}" CommandParameter="icon:Control stick (all directions)"/>
                                    <MenuItem Header="Moving Up" Command="{Binding InsertCommand}" CommandParameter="icon:Control stick (moving up)"/>
                                    <MenuItem Header="Moving Down" Command="{Binding InsertCommand}" CommandParameter="icon:Control stick (moving down)"/>
                                    <MenuItem Header="Moving Left" Command="{Binding InsertCommand}" CommandParameter="icon:Control stick (moving left)"/>
                                    <MenuItem Header="Moving Right" Command="{Binding InsertCommand}" CommandParameter="icon:Control stick (moving right)"/>
                                    <MenuItem Header="Moving Up and Down" Command="{Binding InsertCommand}" CommandParameter="icon:Control stick (moving up+down)"/>
                                    <MenuItem Header="Moving Left and Right" Command="{Binding InsertCommand}" CommandParameter="icon:Control stick (moving left+right)"/>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Left Arrow" Command="{Binding InsertCommand}" CommandParameter="icon:Left arrow"/>
                                <MenuItem Header="Right Arrow" Command="{Binding InsertCommand}" CommandParameter="icon:Right arrow"/>
                                <MenuItem Header="Up Arrow" Command="{Binding InsertCommand}" CommandParameter="icon:Up arrow"/>
                                <MenuItem Header="Down Arrow" Command="{Binding InsertCommand}" CommandParameter="icon:Down arrow"/>
                                <Separator/>
                                <MenuItem Header="Heart" Command="{Binding InsertCommand}" CommandParameter="icon:heart"/>
                                <MenuItem Header="Music Note" Command="{Binding InsertCommand}" CommandParameter="icon:music note"/>
                                <MenuItem Header="Target" Command="{Binding InsertCommand}" CommandParameter="icon:target starburst"/>
                            </MenuItem>
                        </ContextMenu>
                    </TextBox.ContextMenu>
                </TextBox>
            </Grid>
        </DockPanel>
        <DockPanel LastChildFill="True" Margin="0,40,10,0" Width="488" HorizontalAlignment="Right" Height="360" VerticalAlignment="Top">
            <Grid>
                <GroupBox Header="Textbox Options" Margin="0,10,0,200">
                    <Grid Margin="0,0,0,-6">
                        <ComboBox x:Name="BoxTypeCombo" IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Margin="0,14,226,0" VerticalAlignment="Top" Width="174" SelectedItem="{Binding SelectedMessage.TextBoxType}"/>
                        <ComboBox x:Name="DrawTypeBox" IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Margin="0,55,226,0" VerticalAlignment="Top" Width="134" SelectedItem="{Binding SelectedMessage.InitialDrawType}"/>
                        <Label Content="Box Type:" HorizontalAlignment="Right" Margin="0,10,405,0" VerticalAlignment="Top"/>
                        <Label Content="Initial Draw Type:" HorizontalAlignment="Right" Margin="0,51,365,0" VerticalAlignment="Top"/>
                        <Label Content="Box Position:" HorizontalAlignment="Right" Margin="0,10,143,0" VerticalAlignment="Top"/>
                        <ComboBox x:Name="BoxPositionCombo" IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Margin="0,14,10,0" VerticalAlignment="Top" Width="128" SelectedItem="{Binding SelectedMessage.TextBoxPosition}"/>
                        <Label Content="Lines per Box:" HorizontalAlignment="Right" Margin="0,51,138,0" VerticalAlignment="Top"/>
                        <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Height="23" Margin="0,54,10,0" TextWrapping="Wrap" Text="{Binding SelectedMessage.NumLinesPerBox}" VerticalAlignment="Top" Width="123"/>
                        <Label Content="Item ID:" HorizontalAlignment="Right" Margin="0,89,415,0" VerticalAlignment="Top"/>
                        <ComboBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" x:Name="ItemIDBox" HorizontalAlignment="Right" Margin="0,93,226,0" VerticalAlignment="Top" Width="184" SelectedItem="{Binding SelectedMessage.DisplayItemId}"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Misc." Margin="0,160,0,10">
                    <Grid>
                        <Label Content="Unknown1:" HorizontalAlignment="Right" Margin="0,10,392,0" VerticalAlignment="Top"/>
                        <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Height="23" Margin="0,13,250,0" TextWrapping="Wrap" Text="{Binding SelectedMessage.UnknownBool1}" VerticalAlignment="Top" Width="137"/>
                        <Label Content="Initial Sound:" Margin="0,10,139,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="79"/>
                        <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Height="23" Margin="0,13,10,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="124" Text="{Binding SelectedMessage.InitialSound}"/>
                        <Label Content="Initial Camera:" HorizontalAlignment="Right" Margin="0,41,133,0" VerticalAlignment="Top"/>
                        <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Height="23" Margin="0,44,10,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="118" Text="{Binding SelectedMessage.InitialCameraBehavior}"/>
                        <Label Content="Initial Animation:" HorizontalAlignment="Right" Margin="0,78,119,0" VerticalAlignment="Top"/>
                        <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Height="23" Margin="0,81,10,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="104" Text="{Binding SelectedMessage.InitialSpeakerAnim}"/>
                        <Label Content="Item Price:" HorizontalAlignment="Right" Margin="0,41,396,0" VerticalAlignment="Top"/>
                        <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" x:Name="ItemPriceBox" HorizontalAlignment="Right" Height="23" Margin="0,44,250,0" TextWrapping="Wrap" Text="{Binding SelectedMessage.ItemPrice}" VerticalAlignment="Top" Width="141"/>
                        <Label Content="Next Message:" HorizontalAlignment="Right" Margin="0,78,374,0" VerticalAlignment="Top"/>
                        <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" x:Name="NextMessageBox" HorizontalAlignment="Right" Height="23" Margin="0,81,250,0" TextWrapping="Wrap" Text="{Binding SelectedMessage.NextMessageID}" VerticalAlignment="Top" Width="119"/>
                        <Label Content="Unknown4:" HorizontalAlignment="Right" Margin="0,116,392,0" VerticalAlignment="Top"/>
                        <TextBox IsEnabled="{Binding SelectedMessage, Converter={StaticResource NullToFalseConverter}}" HorizontalAlignment="Right" Height="23" Margin="0,119,250,0" TextWrapping="Wrap" Text="{Binding SelectedMessage.UnknownField3}" VerticalAlignment="Top" Width="137"/>
                    </Grid>
                </GroupBox>
            </Grid>
        </DockPanel>
        <Button Content="Add" Command="{Binding OnRequestAddMessage}" Margin="10,0,684,5" Height="29" VerticalAlignment="Bottom"/>
        <Button Content="Delete" Command="{Binding OnRequestRemoveMessage}" Margin="0,0,507,5" Height="29" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="172"/>
    </Grid>
</Window>
